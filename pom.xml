<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.lrodero</groupId>
  <artifactId>BlueprintsTests</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <dependencies>
  
    <!-- To use Titan as graph database through blueprints -->
    <dependency>
      <groupId>com.thinkaurelius.titan</groupId>
      <artifactId>titan-core</artifactId>
      <version>0.5.2</version>
    </dependency>
    
    <!-- To use berkeley db as (local-embedded) storage for Titan (unlike others, Titan uses
         third-party technologies for storage such as BerkeleyDB, Cassandra or
         HBase, see http://s3.thinkaurelius.com/docs/titan/0.5.2/benefits.html)-->
    <dependency>  
      <groupId>com.thinkaurelius.titan</groupId>   
      <artifactId>titan-berkeleyje</artifactId>  
      <version>0.5.2</version>  
    </dependency>
    
    <!-- To use Cassandra db as (remote) storage for Titan (unlike others, Titan uses
         third-party technologies for storage such as BerkeleyDB, Cassandra or
         HBase, see http://s3.thinkaurelius.com/docs/titan/0.5.2/benefits.html)-->
    <dependency>  
      <groupId>com.thinkaurelius.titan</groupId>  
      <artifactId>titan-cassandra</artifactId>  
      <version>0.5.2</version>  
    </dependency>
    
    <!-- To use Neo4J as (local-embedded) graph database through blueprints -->
    <dependency>
      <groupId>com.tinkerpop.blueprints</groupId>
      <artifactId>blueprints-neo4j2-graph</artifactId>
      <version>2.5.0</version>
      <!-- To prevent nasty warning messages regarding the log system 
           we must exclude logback (SLF4J is a pain in the ass, truly) -->
      <exclusions>
        <exclusion> 
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- To use OrientDB as (local-embedded) graph database through blueprints 
         (last stable version as defined in https://github.com/orientechnologies/orientdb/wiki/Download is 1.7.6,
         but the server we can retrieve from OrientDB is 1.7.10 so I think that's uotdated) -->
    <dependency>
      <groupId>com.orientechnologies</groupId>
      <artifactId>orient-commons</artifactId>
      <version>1.7.10</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>com.orientechnologies</groupId>
      <artifactId>orientdb-core</artifactId>
      <version>1.7.10</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>com.orientechnologies</groupId>
      <artifactId>orientdb-client</artifactId>
      <version>1.7.10</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>com.orientechnologies</groupId>
      <artifactId>orientdb-graphdb</artifactId>
      <version>1.7.10</version>
      <type>bundle</type>
    </dependency>
    
    <!-- To be able to use blueprints to remote graph systems based on (for example) Neo4J and OrientDB, 
         we can use Rexster which wraps them and offers a REST interface to show their functionality. Commands
         are sent to Rexster which transforms them to commans to the corresponding database. -->
    <!-- In the case of Neo4J, this seems the only way to connect to a remote Neo4J instance through blueprints. -->
    <!-- In the case of OrientDB it seems the 'default' blueprint library client they provide (orientdb-graphdb)
         can connect to remote database instances which makes Rexster unnecessary.
         Limitation: when working with OrientDB, Rexster can only connect to an embedded OrientDB database. But
         as commented just above, this would be not necessary. -->
    <!-- In the case of Titan Rexster is not needed, as Titan resides in the same JVM than the client, the database
         is in fact kept in the remote storage system (based on Cassandra or HBase). -->
    <dependency>
      <groupId>com.tinkerpop.blueprints</groupId>
      <artifactId>blueprints-rexster-graph</artifactId>
      <version>2.6.0</version>
    </dependency>
    
    <!-- Just for logs to work :| -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.0</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.14</version>
    </dependency>
    
  </dependencies>
  
  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
    
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>

      <!-- Demanded by OrientDB (why?) -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.6</version>
        <extensions>true</extensions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <mainClass>org.lrodero.blueprintstests.Main</mainClass>
          <cleanupDaemonThreads>true</cleanupDaemonThreads>
        </configuration>
      </plugin>
      
    </plugins>
  </build>
  
</project>
